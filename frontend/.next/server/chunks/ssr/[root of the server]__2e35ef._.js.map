{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/aaron/Documents/MYRA-langchain/frontend/src/components/MarkdownRenderer.tsx"],"sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport { memo } from \"react\";\nimport remarkGfm from \"remark-gfm\";\n\nconst MarkdownRenderer = memo(({ content }: { content: string }) => {\n  const parsedContent = content.replace(/\\\\n/g, '\\n'); // Parse the escape sequences to convert \\n to actual linebreaks\n  return <ReactMarkdown remarkPlugins={[remarkGfm]}>{parsedContent}</ReactMarkdown>;\n});\n\nexport default MarkdownRenderer;\n"],"names":[],"mappings":";;;;AACA;AADA;AAEA;;;;;AAEA,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,CAAC,EAAE,OAAO,EAAuB;IAC7D,MAAM,gBAAgB,QAAQ,OAAO,CAAC,QAAQ,OAAO,gEAAgE;IACrH,qBAAO,8OAAC,wLAAA,CAAA,UAAa;QAAC,eAAe;YAAC,6IAAA,CAAA,UAAS;SAAC;kBAAG;;;;;;AACrD;uCAEe"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/aaron/Documents/MYRA-langchain/frontend/src/components/Output.tsx"],"sourcesContent":["import MarkdownRenderer from \"@/components/MarkdownRenderer\";\nimport { Step, type ChatOutput } from \"@/types\";\nimport { useEffect, useState } from \"react\";\n\nconst Output = ({ output }: { output: ChatOutput }) => {\n  const detailsHidden = !!output.result?.answer;\n  return (\n    <div className=\"border-t border-gray-700 py-10 first-of-type:pt-0 first-of-type:border-t-0\">\n      <p className=\"text-3xl\">{output.question}</p>\n\n      {/* Steps */}\n      {output.steps.length > 0 && (\n        <GenerationSteps steps={output.steps} done={detailsHidden} />\n      )}\n\n      {/* Output */}\n      <div\n        className=\"mt-5 prose dark:prose-invert min-w-full prose-pre:whitespace-pre-wrap text-gray-900\"\n        style={{\n          overflowWrap: \"anywhere\",\n        }}\n      >\n        <MarkdownRenderer content={output.result?.answer || \"\"} />\n      </div>\n\n      {/* Tools */}\n      {output.result?.tools_used?.length > 0 && (\n        <div className=\"flex items-baseline mt-5 gap-1\">\n          <p className=\"text-xs text-gray-500\">Tools used:</p>\n\n          <div className=\"flex flex-wrap items-center gap-1\">\n            {output.result.tools_used.map((tool, i) => (\n              <p\n                key={i}\n                className=\"text-xs px-1 py-[1px] bg-gray-800 rounded text-white\"\n              >\n                {tool}\n              </p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst GenerationSteps = ({ steps, done }: { steps: Step[]; done: boolean }) => {\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    if (done) setHidden(true);\n  }, [done]);\n\n  return (\n    <div className=\"border border-gray-700 rounded mt-5 p-3 flex flex-col\">\n      <button\n        className=\"w-full text-left flex items-center justify-between\"\n        onClick={() => setHidden(!hidden)}\n      >\n        Steps {hidden ? <ChevronDown /> : <ChevronUp />}\n      </button>\n\n      {!hidden && (\n        <div className=\"flex gap-2 mt-2\">\n          <div className=\"pt-2 flex flex-col items-center shrink-0\">\n            <span\n              className={`inline-block w-3 h-3 transition-colors rounded-full ${\n                !done ? \"animate-pulse bg-emerald-400\" : \"bg-gray-500\"\n              }`}\n            ></span>\n\n            <div className=\"w-[1px] grow border-l border-gray-700\"></div>\n          </div>\n\n          <div className=\"space-y-2.5\">\n            {steps.map((step, j) => {\n              return (\n                <div key={j}>\n                  <p>{step.name}</p>\n\n                  <div className=\"flex flex-wrap items-center gap-1 mt-1\">\n                    {Object.entries(step.result).map(([key, value]) => {\n                      return (\n                        <p\n                          key={key}\n                          className=\"text-xs px-1.5 py-0.5 bg-gray-800 rounded text-white\"\n                        >\n                          {key}: {value}\n                        </p>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ChevronDown = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"lucide lucide-chevron-down\"\n  >\n    <path d=\"m6 9 6 6 6-6\" />\n  </svg>\n);\n\nconst ChevronUp = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"lucide lucide-chevron-up\"\n  >\n    <path d=\"m18 15-6-6-6 6\" />\n  </svg>\n);\n\nexport default Output;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,SAAS,CAAC,EAAE,MAAM,EAA0B;IAChD,MAAM,gBAAgB,CAAC,CAAC,OAAO,MAAM,EAAE;IACvC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAY,OAAO,QAAQ;;;;;;YAGvC,OAAO,KAAK,CAAC,MAAM,GAAG,mBACrB,8OAAC;gBAAgB,OAAO,OAAO,KAAK;gBAAE,MAAM;;;;;;0BAI9C,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACL,cAAc;gBAChB;0BAEA,cAAA,8OAAC,sIAAA,CAAA,UAAgB;oBAAC,SAAS,OAAO,MAAM,EAAE,UAAU;;;;;;;;;;;YAIrD,OAAO,MAAM,EAAE,YAAY,SAAS,mBACnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;kCAErC,8OAAC;wBAAI,WAAU;kCACZ,OAAO,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,kBACnC,8OAAC;gCAEC,WAAU;0CAET;+BAHI;;;;;;;;;;;;;;;;;;;;;;AAWrB;AAEA,MAAM,kBAAkB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAoC;IACxE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM,UAAU;IACtB,GAAG;QAAC;KAAK;IAET,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,UAAU,CAAC;;oBAC3B;oBACQ,uBAAS,8OAAC;;;;6CAAiB,8OAAC;;;;;;;;;;;YAGpC,CAAC,wBACA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAW,CAAC,oDAAoD,EAC9D,CAAC,OAAO,iCAAiC,eACzC;;;;;;0CAGJ,8OAAC;gCAAI,WAAU;;;;;;;;;;;;kCAGjB,8OAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,MAAM;4BAChB,qBACE,8OAAC;;kDACC,8OAAC;kDAAG,KAAK,IAAI;;;;;;kDAEb,8OAAC;wCAAI,WAAU;kDACZ,OAAO,OAAO,CAAC,KAAK,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;4CAC5C,qBACE,8OAAC;gDAEC,WAAU;;oDAET;oDAAI;oDAAG;;+CAHH;;;;;wCAMX;;;;;;;+BAbM;;;;;wBAiBd;;;;;;;;;;;;;;;;;;AAMZ;AAEA,MAAM,cAAc,kBAClB,8OAAC;QACC,OAAM;QACN,OAAM;QACN,QAAO;QACP,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACf,WAAU;kBAEV,cAAA,8OAAC;YAAK,GAAE;;;;;;;;;;;AAIZ,MAAM,YAAY,kBAChB,8OAAC;QACC,OAAM;QACN,OAAM;QACN,QAAO;QACP,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACf,WAAU;kBAEV,cAAA,8OAAC;YAAK,GAAE;;;;;;;;;;;uCAIG"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/aaron/Documents/MYRA-langchain/frontend/src/components/TextArea.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/TextArea.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/TextArea.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/aaron/Documents/MYRA-langchain/frontend/src/components/TextArea.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/TextArea.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/TextArea.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA"}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/aaron/Documents/MYRA-langchain/frontend/src/app/page.tsx"],"sourcesContent":["\nimport Output from \"@/components/Output\";\nimport TextArea from \"@/components/TextArea\";\nimport { type ChatOutput } from \"@/types\";\nimport { useState } from \"react\";\n\nexport default function Home() {\n  const [outputs, setOutputs] = useState<ChatOutput[]>([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  return (\n    <div\n      className={`container pt-10 pb-32 min-h-screen ${\n        outputs.length === 0 && \"flex items-center justify-center\"\n      }`}\n    >\n      <div className=\"w-full\">\n        {outputs.length === 0 && (\n          <h1 className=\"text-4xl text-center mb-5\">\n            What do you want to know?\n          </h1>\n        )}\n\n        <TextArea className={\"bg-white text-black border border-gray-300 rounded-md p-3 w-full\"}\n          setIsGenerating={setIsGenerating}\n          isGenerating={isGenerating}\n          outputs={outputs}\n          setOutputs={setOutputs}\n        />\n\n        {outputs.map((output, i) => {\n          return <Output key={i} output={output}/>;\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,qBACE,8OAAC;QACC,WAAW,CAAC,mCAAmC,EAC7C,QAAQ,MAAM,KAAK,KAAK,oCACxB;kBAEF,cAAA,8OAAC;YAAI,WAAU;;gBACZ,QAAQ,MAAM,KAAK,mBAClB,8OAAC;oBAAG,WAAU;8BAA4B;;;;;;8BAK5C,8OAAC,8HAAA,CAAA,UAAQ;oBAAC,WAAW;oBACnB,iBAAiB;oBACjB,cAAc;oBACd,SAAS;oBACT,YAAY;;;;;;gBAGb,QAAQ,GAAG,CAAC,CAAC,QAAQ;oBACpB,qBAAO,8OAAC,4HAAA,CAAA,UAAM;wBAAS,QAAQ;uBAAX;;;;;gBACtB;;;;;;;;;;;;AAIR"}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}